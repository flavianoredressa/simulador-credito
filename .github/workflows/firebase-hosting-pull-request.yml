# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR

on:
  pull_request:
    branches-ignore:
      - master

permissions:
  checks: write
  contents: read
  pull-requests: write
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  test_and_coverage:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    name: Test and Coverage Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Check coverage threshold
        run: |
          # Extract coverage percentages from Jest coverage summary
          LINES_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.lines.pct);")
          FUNCTIONS_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.functions.pct);")
          BRANCHES_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.branches.pct);")
          STATEMENTS_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.statements.pct);")

          echo "Coverage Report:"
          echo "Lines: ${LINES_COVERAGE}%"
          echo "Functions: ${FUNCTIONS_COVERAGE}%"
          echo "Branches: ${BRANCHES_COVERAGE}%"
          echo "Statements: ${STATEMENTS_COVERAGE}%"

          # Check if all coverage metrics meet the 95% threshold
          if (( $(echo "$LINES_COVERAGE < 95" | bc -l) )) || \
             (( $(echo "$FUNCTIONS_COVERAGE < 95" | bc -l) )) || \
             (( $(echo "$BRANCHES_COVERAGE < 95" | bc -l) )) || \
             (( $(echo "$STATEMENTS_COVERAGE < 95" | bc -l) )); then
            echo "‚ùå Coverage below 95% threshold. Preview deploy cancelled."
            exit 1
          else
            echo "‚úÖ Coverage meets 95% threshold. Proceeding with preview deploy."
          fi

      - name: Comment coverage on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json'));
            const { lines, functions, branches, statements } = coverage.total;

            const coverageComment = `## üìä Test Coverage Report

            | Metric | Coverage | Status |
            |--------|----------|--------|
            | Lines | ${lines.pct}% | ${lines.pct >= 95 ? '‚úÖ' : '‚ùå'} |
            | Functions | ${functions.pct}% | ${functions.pct >= 95 ? '‚úÖ' : '‚ùå'} |
            | Branches | ${branches.pct}% | ${branches.pct >= 95 ? '‚úÖ' : '‚ùå'} |
            | Statements | ${statements.pct}% | ${statements.pct >= 95 ? '‚úÖ' : '‚ùå'} |

            **Minimum Required**: 95%
            **Overall Status**: ${lines.pct >= 95 && functions.pct >= 95 && branches.pct >= 95 && statements.pct >= 95 ? '‚úÖ Passed' : '‚ùå Failed'}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverageComment
            });

  build_and_preview:
    needs: test_and_coverage
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    name: Build and Preview Deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies and build
        run: npm ci && npm run build

      - name: Deploy to Firebase Hosting Preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ADMIN_OPERATIVE }}
          projectId: admin-operative
