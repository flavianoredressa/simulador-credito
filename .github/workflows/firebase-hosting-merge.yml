# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR to master
on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  test_and_coverage:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    name: Test and Coverage Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Check coverage threshold
        run: |
          # Extract coverage percentages from Jest coverage summary JSON
          LINES_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.lines.pct);")
          FUNCTIONS_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.functions.pct);")
          BRANCHES_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.branches.pct);")
          STATEMENTS_COVERAGE=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); console.log(data.total.statements.pct);")

          echo "Coverage Report:"
          echo "Lines: ${LINES_COVERAGE}%"
          echo "Functions: ${FUNCTIONS_COVERAGE}%"
          echo "Branches: ${BRANCHES_COVERAGE}%"
          echo "Statements: ${STATEMENTS_COVERAGE}%"

          # Check if all coverage metrics meet the 95% threshold
          if (( $(echo "$LINES_COVERAGE < 95" | bc -l) )) || \
             (( $(echo "$FUNCTIONS_COVERAGE < 95" | bc -l) )) || \
             (( $(echo "$BRANCHES_COVERAGE < 95" | bc -l) )) || \
             (( $(echo "$STATEMENTS_COVERAGE < 95" | bc -l) )); then
            echo "❌ Coverage below 95% threshold. Deploy cancelled."
            exit 1
          else
            echo "✅ Coverage meets 95% threshold. Proceeding with deploy."
          fi

  build_and_deploy:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    needs: test_and_coverage
    runs-on: ubuntu-latest
    name: Build and Deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies and build
        run: npm ci && npm run build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ADMIN_OPERATIVE }}
          channelId: live
          projectId: admin-operative
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
